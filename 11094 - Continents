#include<set>
#include<iostream>
#include<vector>
#include<math.h>
#include<string>
#include<sstream>
#include<string>
#include<map>
#include<unordered_map>
#include<queue>
#include<unordered_set>

using namespace std;


#define all(x) x.begin(), x.end()
#define endl '\n'
#define sz(x) x.size()
#define clr(x,v) memset(x,v,sizeof x);
typedef  long long ll;
typedef pair<int, int> pii;

void fast   ()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

#if online_judge
    freopen("C:\Users\a\source\repos\Ah shit here we go again\Ah shit here we go again\in.txt", "r", stdin);
#endif
}

const int N = 100005 + 1;

int n, m, ans, cnt;
char grid[21][21], vis[21][21], ch;
void dfs(int x, int y) {
	if (y < 0)   y = m - 1;
	if (y >= m)  y = 0;
	if (x < 0 || x >= n)
		return;
	if (vis[x][y] != 0 || grid[x][y] != ch)
		return;

	vis[x][y] = 1;
	cnt++;
	dfs(x + 1, y);
	dfs(x, y + 1);
	dfs(x - 1, y);
	dfs(x, y - 1);
}
int main()
{
	fast();
	int t;
	 t = 1;//cin >> t;
	
	while (cin >> n >> m)
	{
		
		for (int i = 0; i < 21; i++)
			for (int j = 0; j < 21; j++)
				vis[i][j] = 0;

		for (int i = 0; i < n; i++)
			cin >> grid[i];

		int x, y;
		cin >> x >> y;
		ch = grid[x][y];
		dfs(x, y);
		ans = 0;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
			{

				cnt = 0;
				dfs(i, j);
				if (cnt > ans)
					ans = cnt;


			}
		cout << ans << endl;

	}
}
